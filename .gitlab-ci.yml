image: node:22.12.0

stages:
  - build
  - deploy

before_script:
  - echo "GitLab CI/CD 시작!"
  - mkdir ~/.ssh
  - echo "$SSH_KEY" > ~/.ssh/ssh_key
  - chmod 600 ~/.ssh/ssh_key

  - node -v
  - npm -v
  - apt-get update && apt-get install -y python3-pip git awscli  # aws-cli를 apt로 설치


# 빌드 단계
build_vite:
  stage: build
  only:
    - client/master
    - client/develop
  script:
    - cd front-end  # front-end 폴더로 이동

    - | # 브랜치별 환경변수 설정
      if [ "$CI_COMMIT_BRANCH" == "client/master" ]; then
        echo "$FRONTEND_PROD_ENV" > .env
      elif [ "$CI_COMMIT_BRANCH" == "client/develop" ]; then
        echo "$FRONTEND_DEV_ENV" > .env
      else
        echo "브랜치가 dev 또는 prod가 아닙니다."
      fi
    - echo ".env 확인!"
    - cat .env

    - npm install    # 의존성 설치
    - npm install -g typescript
    - npm run build  # vite 빌드 실행
  artifacts:
    paths:
      - front-end/dist  # vite 빌드 결과물 저장

# client/develop 브랜치에 대해 로컬 Nginx에 배포
deploy_to_local_nginx:
  stage: deploy
  only:
    - client/develop  # client/develop 브랜치에서만 실행
  script:
    - scp -o StrictHostKeyChecking=no -i ~/.ssh/ssh_key -P $SSH_PORT -r front-end/dist/* $SSH_USER@$SSH_HOST:/var/www/html
    - ssh -o StrictHostKeyChecking=no -i ~/.ssh/ssh_key $SSH_USER@$SSH_HOST -p $SSH_PORT "sudo systemctl restart nginx"

# client/master 브랜치에 대해 AWS S3에 배포
deploy_to_s3:
  stage: deploy
  only:
    - client/master  # client/master 브랜치에서만 실행
  script:
    - aws s3 sync front-end/dist/ s3://newkiz-s3  # S3 버킷에 빌드 결과물 업로드